인스턴싱을 안해도 되는데 하게 만들면 성능에 문제가 생긴다.

인스턴싱을 처리할 때 어떻게 해야할 지 설계
(인스턴싱을 적용할 녀석, 적용 안할 녀석)

현재 메시는 인스턴싱 처리하는 구조가 안들어있다.

메시가 렌더링을 몇 개 하느냐를 판단하여 인스턴싱
(메시 클래스에서 렌더카운트 변수를 만들어서 사용한다.) 
(재질 정보도 넘겨줘서 인스턴싱 한다. 몬스터 공격 시 반짝이게 하기 위해)

start() 함수
실제 오브젝트와 cdo를 구분할 수 있는 함수,
여기다가 그 오브젝트의 렌더 카운트를 추가
제거 할 때는 delete 쪽에서 렌더 카운트를 제거

//2교시
■ 인스턴싱 클래스
렌더매니저에서 관리 가능한 일반 객체

자료구조 : 메모리 풀링( 몇 개 만들어 놓고 필요할 때 꺼내쓰는 방식)
(메모리 단편화를 막기 위해 사용)

메시의 메모리 주소를 키값으로 쓸 것

30개 메모리 풀 만들어놓고
처음 5개 정도를 렌더하는 것으로 간주

-값이면 인스턴싱 아이디가 없다고 판단,
0~+a 숫자면 있다고 판단


//내일
인스턴스 id 판단해서 제거하는 시스템 제작