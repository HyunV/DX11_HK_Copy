g버퍼로 그려낼 수 있게 작업

share.fx에서
PS_OUTPUG_GBUFFER	
버퍼마다 색을 넣어주면 각각의 렌더타겟에 적용시켜 주는 역할

g버퍼 1 -> 알베도타겟

*3D는 확대, 축소가 빈번하기 때문에 2D때 쓰던포인트샘플러를 안쓴다.
-> 리니어 샘플러로 교체

단위벡터는 -1~1사이 표현
색상은 0~1 사이

탄젠트 공간 -> 오브젝트 공간으로 변환 처리

오브젝트 공간 행렬  =  *-> 탄젠트, 바이노말, 노말 * 역행렬

share.fx
computeBumpNormal (범프 노멀라이징)
{
ambientcolor.w = 범프 여부

* x, y는 음방향이 나올 수 있지만 zㄴ느 무조건 양방향

* 조명 연산은 머테리얼 값이 필수로 필요하다.
}

■색 변환 시스템
머테리얼 각종 컬러값은 무거우므로
이걸 float4로 마무리해주는 시스템을 구현한다.

emmisive.w -> specular에 텍스처가 있는지여부
specular.w -> specular power
basecolor.w -> emmisive enable여부

================================
fbm ==
텍스처 파일들 정보
BNL 베이스 노말 텍스처
RMT 메탈릭 텍스처?
XM 스페큘러

//2교시
렌더타겟 출력기능

디버그 쉐이더 제작
디버그용 global constant buffer

