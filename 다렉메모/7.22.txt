속성가서 종속성으로
엔진이 우선되게 순서를 바꾸자.

//메시를 띄웠다

띄웠으니 이제 공간변환들이 필요하다.


//씬
포스트 업데이트는 부모에게 알려줘야되는데 귀찮다
그러니 CSceneInfo를 만들어서 쓴다.

씬은 씬인포를 무조건 하나 가지고있게

씬매니저는 만들어질 때 디폴트 씬을 무조건 생성한다.

//객체지향설계

컴포넌트설계
 오브젝트는 컴포넌트 를 집어넣어줘서
 원하는 오브젝트로 만들어서 쓰는 방식

장점: 객체지향은 부모를 만들다보면
필요없는 부분이 있는 자식이 있는데
컴포넌트 설계로 하면 원하는 컴포만 넣어주는 식이라 
확장이 편하다.

단점: 어렵다.

컴포넌트 2가지 정보
(트랜스폼)화면정보를 담는 컴포넌트(월드상 위치 등등, 화면에 출력할 수 있는 기능, 충돌체 등등..)
트랜스폼이 없는 컴포넌트(오브젝트의 정보, 이동기능 등..)

■ 모든 컴포넌트들이 상속받을 베이스 컴포넌트 제작

회면 출력 컴포넌트 CPrimitiveComponent

오브젝트 컴포넌트는 리스트로 하면 되는데
씬 컴포넌트는 계층구조로 할거다.(트랜스폼이라는걸 무조건 갖고 있게 한다.)


