IA(알아서 처리됨)
버텍스
픽셀
레스터(알아서 해줌)


큰 구조
IA->VS->레스터라이저->PS
VS에서 정점을 변환할 때 정점은 로컬위치를 갖는 정점으로 표현되어있다.
C++에서 계산된 위치, 크기 회전을 이용하여 월드공간으로 변환하기 위한 월드행렬을 만든다.

월드행렬은 어디서 만들고 있나? : 트랜스폼
공간변환 = 로컬정점위치 * 월드행렬 * 뷰행렬 * 투영행렬
이런식으로 계산이 일어나야됨

이걸 다 계산하고 쉐이더로 보내줌

VS : 정점 변환
PS : 색상 결정

정점쉐이더 만들어지고 픽셀쉐이더로 넘겨주는 부분은
sprite.fx쪽을 보면 된다.

컴퓨트 쉐이더는 매우 특수한 애라 잘 안씀

#실제 출력을 할 때 필요한것들은 무엇인가?

씬 컴포넌트
  |
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
|		|						|						|
씬 인포, 씬 리소스(메시 쉐이더 머테리얼)	카메라매니저(커런트 카메라, 유아이카메라)	게임오브젝트
(씬마다 규칙을 정해주기 위해 있는것)
메인 씬 스타트 씬 이런거에
스타트 버튼으로 넘어가면 다음 씬으로 넘어가게 등등,,



커런트카메라(2d든 3d든 이동이 발생할 경우 위치가 갱신된다.)
	투영행렬은 해상도 변경 아닌한 거의 변경 안됨
UI카메라(무조건 직교투영(고정)뷰행렬은 절대 움직이지 않음)
	
%카메라의 가장 큰 역할은 뷰행렬
카메라 컴포는트 여러개 만들어도 카메라매니저의 카메라는 하나만 존재한다.


게임오브젝트
api때는 이미지, 애니메이션도 다 갖고 있는 본체형태였는데
화면 출력하는 primitive 컴포넌트들은 씬컴포 종류니까 무조건 트랜스폼을 갖고있음
씬 컴포넌트 종류들은 무조건 트랜스폼을 들고있다.

지금은 일종의 모듈이다.
껍데기??
생산성, 확장성이 좋다.

컴포넌트
(씬 컴포넌트), 
	ㄴ
		프리미티브 컴포넌트(스킬? 등등)
위치, 회전 크기를 갖는 녀석

(오브젝트 컴포넌트)
	

2교시
4가지 종류
메시 쉐이더 텍스처-머테리얼

메시는 화면에 출력할 '도형'

티모 이미지 기준으로
100 100 이미지를 그리면
버텍스는 정점 4개를 찍고
픽셀 쉐이더는 100 x 100 해서
만개를 찍어낸다.

선형보간 공부를 해두자