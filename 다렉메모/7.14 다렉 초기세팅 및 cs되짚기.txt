클라이어트, 에디터

VC++디렉터리 세팅

//다이렉트 x란?
그래픽 라이브러리
3차원 물체를 출력하거나 등등..
그래픽카드를 이용해 화면을 렌더링 하는 기능을 제공해주는 녀석
----------------------------------------------
글카 드라이버
드라이버란 뭘까?

그래픽카드 종류가 많아
명령은 각각 다를 것이다.
드라이버는 이 명령을 내리기 위한 도구

DX에 명령 -> 드라이버에 명령 -> 그래픽카드에 명령
내가 원하는 화면 출력

이 작업을 하려면 그래픽카드와 
드라이버 초기화를 해줘야 한다.

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
CDevice 클래스
ID3D11Device : IUnknown이라는 놈을 상속받고 있음
언노운은 최상위객체
레퍼런스카운트로 동작된다.

:디바이스 초기화 하려고 쓰 쓴다.


앞에 I 붙은 애들은 다 com 객체이다.(component object 모델로 만들어진 객체)
독립성, 호환성을 위해 제작된 객체?

DX객체들은 대부분 아이언노운을 상속받는다.

Com객체들의 특징
GUID라는것을 가지고있다 (128비트)
TypeID마냥 고유한 식별문자가 있음.

ID3D11Device* 버퍼 생성용도(버퍼: 임시 저장공간)
ID3D11DeviceContext* (실제 렌더링에 관해 명령을 내려주는 녀석)(이미디언트)
이미디언트 컨텍스트, 디펀트 컨텍스트 2종류가 있다?

멀티스레딩 하려고 디펀트 컨텍스가 있다
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
# 이미지의 픽셀은 어디에 저장될까? VRAM
  출력: 그래픽카드에서 출력이 된다.

메인보드: 각 부품들 상호작용할 수 있게 해주는 통로

변수는 메모리에서 생성되고 CPU에서 연산해준다.
CPU가 직접 접근해서 하는게 아니라 레지스터로 전달받아 연산한다.
실제 연산을 해주는 장치: ALU 

메모리는 버스를 통해 CPU 에게 보내줌. 빠르게 처리가 가능ㅎ마

글카는 VRAM을 쓰는데
VRAM이 꽉차면 시스템 RAM으로 가는데 이때부터 느려짐

렌더링을 연산하는 연산장치: GPU

결론: 디바이스, 텍스처 로딩하는 버퍼들은 VRAM에 저장한다.

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
더블버퍼링 다시 설명
★ 고속복사 
주표면 버퍼를 백버퍼에 옮겨줬음

다렉에서 백버퍼를 쓰긴하는데 
여기선 페이지 플립핑이라는 기법을 쓴다.

백버퍼에 그려내고 페이지 플립핑 해라! 이러면 백버퍼가 주표면이되고 주표면이 배거퍼가 됨
더블버퍼링은 백버퍼에 그려진 내용들을 복사해서 주표면에 옮겨줌

플립핑을 쓰기위해
IDXGISwapChain* : 페이지 플립핑 지원, 백버퍼 지원

3D에선 깊이라는 것이 존재한다. 멀리있는 애가 가까히 있는 녀석을 가릴 수 있다.
그래서 깊이버퍼라는것도 만들어야됨

1280 720 의 픽셀을 전달할 수 있는 공간이 필요

렌더타겟?? : 백버퍼 에 출력을 하기 위해 렌더타겟을 만듬
이 렌더타겟을 이용해서 출력할 때 그려줄 도화지를 지정한다.


ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
DepthStencilView 깊이 버퍼

3대공간 (해상도에 맞춰 똑같은 크기로 만들어짐)
백버퍼 픽셀정보 저장하는공간
 깊이버퍼 픽셀들간 어떤게 가까히 있는지 판별하는 버퍼(깊이값 0~1멀리)
 스텐실(깊이) 각각에 픽셀마다 원하는 값을 저장해놓고 특수효과를 만들어주는 목적으로 사용도니다.
	(성능은 안좋은편) 

